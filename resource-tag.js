"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomResourceTagConstruct = exports.verifyCustomResourceTagSchema = exports.CustomResourceTagSchema = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const constructs_1 = require("constructs");
const zod_1 = require("zod");
const utils_1 = require("./utils");
/**
 * CustomResourceTagSchema
 *
 * @param resourceName
 * @param awsEnvironment {@link AwsEnvironment}
 * @param resourceOwner {@link PulsifiTeam}
 */
exports.CustomResourceTagSchema = zod_1.z.object({
    resourceName: zod_1.z.string().min(1).max(256),
    awsEnvironment: zod_1.z.nativeEnum(utils_1.AwsEnvironment),
    resourceOwner: zod_1.z.nativeEnum(utils_1.PulsifiTeam),
});
/**
 * verifyCustomResourceTagSchema
 *
 * @param props {@link CustomResourceTagProps}
 * @returns CustomZodResponse {@link CustomZodResponse}
 */
const verifyCustomResourceTagSchema = (props) => {
    const zodCheckOutput = exports.CustomResourceTagSchema.safeParse(props);
    if (!zodCheckOutput.success) {
        return {
            success: zodCheckOutput.success,
            message: zodCheckOutput.error.issues,
        };
    }
    return {
        success: zodCheckOutput.success,
    };
};
exports.verifyCustomResourceTagSchema = verifyCustomResourceTagSchema;
class CustomResourceTagConstruct extends constructs_1.Construct {
    /**
     * CustomResourceTagConstruct
     *
     * @param scope
     * @param id
     * @param props {@link CustomResourceTagProps}
     */
    constructor(scope, id, props) {
        super(scope, id);
        const zodCheckOutput = (0, exports.verifyCustomResourceTagSchema)(props);
        if (!zodCheckOutput.success) {
            throw new Error(JSON.stringify(zodCheckOutput.message));
        }
        aws_cdk_lib_1.Tags.of(props.construct).add("Name", props.resourceName);
        aws_cdk_lib_1.Tags.of(props.construct).add("Owner", props.resourceOwner);
        aws_cdk_lib_1.Tags.of(props.construct).add("Environment", props.awsEnvironment);
    }
}
exports.CustomResourceTagConstruct = CustomResourceTagConstruct;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb3VyY2UtdGFnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vbGliL3Jlc291cmNlLXRhZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2Q0FBbUM7QUFDbkMsMkNBQXdEO0FBQ3hELDZCQUF3QjtBQUN4QixtQ0FBOEU7QUFFOUU7Ozs7OztHQU1HO0FBQ1UsUUFBQSx1QkFBdUIsR0FBRyxPQUFDLENBQUMsTUFBTSxDQUFDO0lBQy9DLFlBQVksRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUM7SUFDeEMsY0FBYyxFQUFFLE9BQUMsQ0FBQyxVQUFVLENBQUMsc0JBQWMsQ0FBQztJQUM1QyxhQUFhLEVBQUUsT0FBQyxDQUFDLFVBQVUsQ0FBQyxtQkFBVyxDQUFDO0NBQ3hDLENBQUMsQ0FBQztBQWNIOzs7OztHQUtHO0FBQ0ksTUFBTSw2QkFBNkIsR0FBRyxDQUM1QyxLQUE2QixFQUM1QixFQUFFO0lBQ0gsTUFBTSxjQUFjLEdBQUcsK0JBQXVCLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hFLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDN0IsT0FBTztZQUNOLE9BQU8sRUFBRSxjQUFjLENBQUMsT0FBTztZQUMvQixPQUFPLEVBQUUsY0FBYyxDQUFDLEtBQUssQ0FBQyxNQUFNO1NBQ2YsQ0FBQztJQUN4QixDQUFDO0lBRUQsT0FBTztRQUNOLE9BQU8sRUFBRSxjQUFjLENBQUMsT0FBTztLQUNWLENBQUM7QUFDeEIsQ0FBQyxDQUFDO0FBZFcsUUFBQSw2QkFBNkIsaUNBY3hDO0FBRUYsTUFBYSwwQkFBMkIsU0FBUSxzQkFBUztJQUN4RDs7Ozs7O09BTUc7SUFDSCxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQTZCO1FBQ3RFLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFakIsTUFBTSxjQUFjLEdBQUcsSUFBQSxxQ0FBNkIsRUFBQyxLQUFLLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQzdCLE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUN6RCxDQUFDO1FBRUQsa0JBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3pELGtCQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMzRCxrQkFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDbkUsQ0FBQztDQUNEO0FBcEJELGdFQW9CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ3MgfSBmcm9tIFwiYXdzLWNkay1saWJcIjtcbmltcG9ydCB7IENvbnN0cnVjdCwgdHlwZSBJQ29uc3RydWN0IH0gZnJvbSBcImNvbnN0cnVjdHNcIjtcbmltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XG5pbXBvcnQgeyBBd3NFbnZpcm9ubWVudCwgdHlwZSBDdXN0b21ab2RSZXNwb25zZSwgUHVsc2lmaVRlYW0gfSBmcm9tIFwiLi91dGlsc1wiO1xuXG4vKipcbiAqIEN1c3RvbVJlc291cmNlVGFnU2NoZW1hXG4gKlxuICogQHBhcmFtIHJlc291cmNlTmFtZVxuICogQHBhcmFtIGF3c0Vudmlyb25tZW50IHtAbGluayBBd3NFbnZpcm9ubWVudH1cbiAqIEBwYXJhbSByZXNvdXJjZU93bmVyIHtAbGluayBQdWxzaWZpVGVhbX1cbiAqL1xuZXhwb3J0IGNvbnN0IEN1c3RvbVJlc291cmNlVGFnU2NoZW1hID0gei5vYmplY3Qoe1xuXHRyZXNvdXJjZU5hbWU6IHouc3RyaW5nKCkubWluKDEpLm1heCgyNTYpLFxuXHRhd3NFbnZpcm9ubWVudDogei5uYXRpdmVFbnVtKEF3c0Vudmlyb25tZW50KSxcblx0cmVzb3VyY2VPd25lcjogei5uYXRpdmVFbnVtKFB1bHNpZmlUZWFtKSxcbn0pO1xuXG4vKipcbiAqIEN1c3RvbVJlc291cmNlVGFnUHJvcHNcbiAqXG4gKiBAcGFyYW0gcmVzb3VyY2VOYW1lXG4gKiBAcGFyYW0gYXdzRW52aXJvbm1lbnQge0BsaW5rIEF3c0Vudmlyb25tZW50fVxuICogQHBhcmFtIHJlc291cmNlT3duZXIge0BsaW5rIFB1bHNpZmlUZWFtfVxuICogQHBhcmFtIGNvbnN0cnVjdFxuICovXG5leHBvcnQgdHlwZSBDdXN0b21SZXNvdXJjZVRhZ1Byb3BzID0gei5pbmZlcjx0eXBlb2YgQ3VzdG9tUmVzb3VyY2VUYWdTY2hlbWE+ICYge1xuXHRjb25zdHJ1Y3Q6IElDb25zdHJ1Y3Q7XG59O1xuXG4vKipcbiAqIHZlcmlmeUN1c3RvbVJlc291cmNlVGFnU2NoZW1hXG4gKlxuICogQHBhcmFtIHByb3BzIHtAbGluayBDdXN0b21SZXNvdXJjZVRhZ1Byb3BzfVxuICogQHJldHVybnMgQ3VzdG9tWm9kUmVzcG9uc2Uge0BsaW5rIEN1c3RvbVpvZFJlc3BvbnNlfVxuICovXG5leHBvcnQgY29uc3QgdmVyaWZ5Q3VzdG9tUmVzb3VyY2VUYWdTY2hlbWEgPSAoXG5cdHByb3BzOiBDdXN0b21SZXNvdXJjZVRhZ1Byb3BzLFxuKSA9PiB7XG5cdGNvbnN0IHpvZENoZWNrT3V0cHV0ID0gQ3VzdG9tUmVzb3VyY2VUYWdTY2hlbWEuc2FmZVBhcnNlKHByb3BzKTtcblx0aWYgKCF6b2RDaGVja091dHB1dC5zdWNjZXNzKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHN1Y2Nlc3M6IHpvZENoZWNrT3V0cHV0LnN1Y2Nlc3MsXG5cdFx0XHRtZXNzYWdlOiB6b2RDaGVja091dHB1dC5lcnJvci5pc3N1ZXMsXG5cdFx0fSBhcyBDdXN0b21ab2RSZXNwb25zZTtcblx0fVxuXG5cdHJldHVybiB7XG5cdFx0c3VjY2Vzczogem9kQ2hlY2tPdXRwdXQuc3VjY2Vzcyxcblx0fSBhcyBDdXN0b21ab2RSZXNwb25zZTtcbn07XG5cbmV4cG9ydCBjbGFzcyBDdXN0b21SZXNvdXJjZVRhZ0NvbnN0cnVjdCBleHRlbmRzIENvbnN0cnVjdCB7XG5cdC8qKlxuXHQgKiBDdXN0b21SZXNvdXJjZVRhZ0NvbnN0cnVjdFxuXHQgKlxuXHQgKiBAcGFyYW0gc2NvcGVcblx0ICogQHBhcmFtIGlkXG5cdCAqIEBwYXJhbSBwcm9wcyB7QGxpbmsgQ3VzdG9tUmVzb3VyY2VUYWdQcm9wc31cblx0ICovXG5cdGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBDdXN0b21SZXNvdXJjZVRhZ1Byb3BzKSB7XG5cdFx0c3VwZXIoc2NvcGUsIGlkKTtcblxuXHRcdGNvbnN0IHpvZENoZWNrT3V0cHV0ID0gdmVyaWZ5Q3VzdG9tUmVzb3VyY2VUYWdTY2hlbWEocHJvcHMpO1xuXHRcdGlmICghem9kQ2hlY2tPdXRwdXQuc3VjY2Vzcykge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKEpTT04uc3RyaW5naWZ5KHpvZENoZWNrT3V0cHV0Lm1lc3NhZ2UpKTtcblx0XHR9XG5cblx0XHRUYWdzLm9mKHByb3BzLmNvbnN0cnVjdCkuYWRkKFwiTmFtZVwiLCBwcm9wcy5yZXNvdXJjZU5hbWUpO1xuXHRcdFRhZ3Mub2YocHJvcHMuY29uc3RydWN0KS5hZGQoXCJPd25lclwiLCBwcm9wcy5yZXNvdXJjZU93bmVyKTtcblx0XHRUYWdzLm9mKHByb3BzLmNvbnN0cnVjdCkuYWRkKFwiRW52aXJvbm1lbnRcIiwgcHJvcHMuYXdzRW52aXJvbm1lbnQpO1xuXHR9XG59XG4iXX0=